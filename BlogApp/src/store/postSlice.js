// Import createSlice function from Redux Toolkit:-
import { createSlice } from "@reduxjs/toolkit"

//Defines the initial state for the posts slice with an array for posts, a boolean for loading state, and a variable for error messages.
const initialState = {
posts:[],//Array to hold the list of posts.
loading:false,//Loading state for fetching posts.
error:null//Error state for handling any errors.
};

//create a post slice using createSlice({}):-
const postSlice = createSlice({
    name:'posts',//Name of the slice
    initialState,//InitialState defined above
   //reducers: an object containing the reducer functions. Each reducer function defines how the state should change in response to an action.
    reducers:{
        //An Action to set loading state to true and clear any previous errors:-
        fetchPostsStart(state){
            state.loading = true,
            state.error  = null;
        },
        //An Action to handle sucessful fetching of posts:-
        fetchPostsSuccess(state,action){
state.loading = false,
state.posts = action.payload; //updates posts with the data from the action payload.
        },
        //An Action to handle failure in fetching posts:-
        fetchPostsFailure(state,action){
state.loading = false,
state.error = action.payload;//updates the error with the error message from the action payload.
        },
        //An Action to add a new post to the posts array
        addPost(state,action){
state.posts.push(action.payload);
        },
        //An Action to delete a post from the posts array based on its ID
        deletePost(state,action){
state.posts = state.posts.filter((post)=>post.$id !== action.payload
)
 },
 //An Action to update an existing post in the posts array
 updatePost(state,action){
const index = state.posts.findIndex((post)=> post.$id === action.payload.$id)
 if(index !== -1){
    state.posts[index] = action.payload
 }

},
//An Action to reset post state on user logout
onLogoutPost(state){
state.posts = [],
state.loading = false,
state.error = null
},
},
});

//Export Actions generated by createSlice:-
export const {
	fetchPostsStart,
	fetchPostsSuccess,
	fetchPostsFailure,
addPost,
deletePost,
updatePost,
onLogoutPost
} = postSlice.actions;

//Export the reducer generated by createSlice:-
export default postSlice.reducer;